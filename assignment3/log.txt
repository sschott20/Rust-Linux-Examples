For the dnn I just split it after the first Convolusion node as this means we only need to do a tiny ammount of computation on the client, but we can still scramble up the data of the picture which shouldn't be recoverable. For example just splitting after a subtraction node it would be pretty trivial to reverse engeneer the image. 

The hard part was the dnn partition for sure, after splitting the dnn everything was just simple user space networking.

For splitting the dnn, it was a nightmare. For starters, with my setup flatc didnt seem to work with rust, the generated .rs file wouldn't compile so I switched to python. Here the big insight was using the --gen-object-api flag as opposed to --gen-mutable which made this astronomically easier.

The code for generating the model split is in split/split.py, which separates the dnn into two parts, the lower part for the client and the upper part for the server. 
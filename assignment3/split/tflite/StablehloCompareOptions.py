# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tflite

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StablehloCompareOptions(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StablehloCompareOptions()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStablehloCompareOptions(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def StablehloCompareOptionsBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x54\x46\x4C\x33", size_prefixed=size_prefixed)

    # StablehloCompareOptions
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StablehloCompareOptions
    def ComparisonDirection(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # StablehloCompareOptions
    def CompareType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def StablehloCompareOptionsStart(builder):
    builder.StartObject(2)

def Start(builder):
    StablehloCompareOptionsStart(builder)

def StablehloCompareOptionsAddComparisonDirection(builder, comparisonDirection):
    builder.PrependUint32Slot(0, comparisonDirection, 0)

def AddComparisonDirection(builder, comparisonDirection):
    StablehloCompareOptionsAddComparisonDirection(builder, comparisonDirection)

def StablehloCompareOptionsAddCompareType(builder, compareType):
    builder.PrependUint32Slot(1, compareType, 0)

def AddCompareType(builder, compareType):
    StablehloCompareOptionsAddCompareType(builder, compareType)

def StablehloCompareOptionsEnd(builder):
    return builder.EndObject()

def End(builder):
    return StablehloCompareOptionsEnd(builder)


class StablehloCompareOptionsT(object):

    # StablehloCompareOptionsT
    def __init__(self):
        self.comparisonDirection = 0  # type: int
        self.compareType = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        stablehloCompareOptions = StablehloCompareOptions()
        stablehloCompareOptions.Init(buf, pos)
        return cls.InitFromObj(stablehloCompareOptions)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, stablehloCompareOptions):
        x = StablehloCompareOptionsT()
        x._UnPack(stablehloCompareOptions)
        return x

    # StablehloCompareOptionsT
    def _UnPack(self, stablehloCompareOptions):
        if stablehloCompareOptions is None:
            return
        self.comparisonDirection = stablehloCompareOptions.ComparisonDirection()
        self.compareType = stablehloCompareOptions.CompareType()

    # StablehloCompareOptionsT
    def Pack(self, builder):
        StablehloCompareOptionsStart(builder)
        StablehloCompareOptionsAddComparisonDirection(builder, self.comparisonDirection)
        StablehloCompareOptionsAddCompareType(builder, self.compareType)
        stablehloCompareOptions = StablehloCompareOptionsEnd(builder)
        return stablehloCompareOptions
